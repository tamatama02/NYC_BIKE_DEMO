{
  "paragraphs": [
    {
      "text": "%md\n## Welcome to Zeppelin.\n##### This is a live tutorial, you can run the code yourself. (Shift-Enter to Run)\n\n#### Todo\n* Set up proxy if required",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:41 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334429_993692086",
      "id": "20150213-231621_168813393",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:41 AM",
      "dateFinished": "Feb 24, 2017 7:23:42 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nif [ -e /tmp/zdemo.dataset.downloaded ]\nthen\n  echo \u0027Files already downloaded so skipping the download ...\u0027\n  exit 0;\nfi\n\nrm /tmp/bank.zip\nrm -rf /tmp/data\ncd /tmp\n\ncurl -O http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip\nmkdir data\nunzip bank.zip -d data\nrm bank.zip\n\nhdfs dfs -put  /tmp/data/bank-full.csv .\nhdfs dfs -ls -h bank-full.csv\nif [ $? -eq 0 ]; then\n  touch /tmp/zdemo.dataset.downloaded\nfi",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:51:31 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475100289617_-644699396",
      "id": "20160928-220449_1039784627",
      "dateCreated": "Sep 28, 2016 10:04:49 PM",
      "dateStarted": "Feb 24, 2017 7:23:41 AM",
      "dateFinished": "Feb 24, 2017 7:23:49 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load data into table",
      "text": "// Wait for data to be downloaded\nimport java.nio.file.{Paths, Files};\nvar counter \u003d 0;\ntry {\n  while (counter \u003c 50 \u0026\u0026 !Files.exists(Paths.get(\"/tmp/zdemo.dataset.downloaded\"))) {\n    println(\"sleeping for 100ms...\")\n    Thread.sleep(100);\n    counter \u003d counter + 1;\n  }\n}catch {\n    case ea: InterruptedException \u003d\u003e print (\"Thread interrupted\");\n}\n// Data downloaded\n\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\n\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// So you don\u0027t need create them manually\n\n// load bank data\nval bankText \u003d sc.textFile(\"bank-full.csv\")\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank \u003d bankText.map(s \u003d\u003e s.split(\";\")).filter(s \u003d\u003e s(0) !\u003d \"\\\"age\\\"\").map(\n    s \u003d\u003e Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt\n        )\n).toDF()\nbank.registerTempTable(\"bank\")",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:41 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334429_993692086",
      "id": "20150210-015259_1403135953",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:41 AM",
      "dateFinished": "Feb 24, 2017 7:23:49 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value\nfrom bank \nwhere age \u003c 30 \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:41 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334429_993692086",
      "id": "20150210-015302_1492795503",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:42 AM",
      "dateFinished": "Feb 24, 2017 7:23:54 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere age \u003c ${maxAge\u003d30} \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:42 AM",
      "config": {
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {
          "maxAge": "35"
        },
        "forms": {
          "maxAge": {
            "name": "maxAge",
            "defaultValue": "30",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464119334430_994846333",
      "id": "20150212-145404_867439529",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:50 AM",
      "dateFinished": "Feb 24, 2017 7:23:56 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere marital\u003d\"${marital\u003dsingle,single|divorced|married}\" \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:42 AM",
      "config": {
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {
          "marital": "single"
        },
        "forms": {
          "marital": {
            "name": "marital",
            "defaultValue": "single",
            "options": [
              {
                "value": "single"
              },
              {
                "value": "divorced"
              },
              {
                "value": "married"
              }
            ],
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464119334430_994846333",
      "id": "20150213-230422_1600658137",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:55 AM",
      "dateFinished": "Feb 24, 2017 7:23:57 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Congratulations, it\u0027s done.\n##### You can create your own notebook in \u0027Notebook\u0027 menu. Good luck!",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:51:49 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334430_994846333",
      "id": "20150213-230428_1231780373",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:42 AM",
      "dateFinished": "Feb 24, 2017 7:23:43 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nAbout bank data\n\n```\nCitation Request:\n  This dataset is public available for research. The details are described in [Moro et al., 2011]. \n  Please include this citation if you plan to use this database:\n\n  [Moro et al., 2011] S. Moro, R. Laureano and P. Cortez. Using Data Mining for Bank Direct Marketing: An Application of the CRISP-DM Methodology. \n  In P. Novais et al. (Eds.), Proceedings of the European Simulation and Modelling Conference - ESM\u00272011, pp. 117-121, Guimarães, Portugal, October, 2011. EUROSIS.\n\n  Available at: [pdf] http://hdl.handle.net/1822/14838\n                [bib] http://www3.dsi.uminho.pt/pcortez/bib/2011-esm-1.txt\n```",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:51:48 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334430_994846333",
      "id": "20150326-214658_12335843",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:43 AM",
      "dateFinished": "Feb 24, 2017 7:23:43 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:23:43 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119334431_994461584",
      "id": "20150703-133047_853701097",
      "dateCreated": "May 24, 2016 3:48:54 PM",
      "dateStarted": "Feb 24, 2017 7:23:56 AM",
      "dateFinished": "Feb 24, 2017 7:23:57 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Zeppelin Tutorial",
  "id": "2BM78RYB5",
  "angularObjects": {
    "2C919KR6F": [],
    "2C97ZBP5U": [],
    "2CA4Q4KPJ": [],
    "2C962G1XX": [],
    "2C8QSQZ4R": [],
    "2CBZ4GHQX": [],
    "2CBKZTYKJ": [],
    "2C9QJ33Y6": [],
    "2CAACCR11": []
  },
  "config": {},
  "info": {}
}