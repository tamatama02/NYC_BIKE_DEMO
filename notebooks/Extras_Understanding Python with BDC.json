{"paragraphs":[{"text":"%md\n# Understanding how Python is configured with BDC\n\nThe servers in your BDC cluster have two separate installations of Python: \"system\" and \"user\"\n\n+ System Python: This is version 2.6.6. This is the version that is shipped and standard with the version of Oracle Linux currently used in BDC.  This version is left unchanged to not disrupt other operating system processes and procedures which depend on it.\n+ User Python : This is version 2.7.x. BDC configures this version for PySpark and Zeppelin.  It is located at /u01/bdcsce/usr/local/bin/python\n    \nIt should be noted that the default PATH for shell sessions will pickup the system python installation, but the BDC tools (like Zeppelin and pySpark) are configured for the user python installation.\n\nYou should be using the User Python.  See below for examples on how to add packages to the User python installation.\n\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Understanding how Python is configured with BDC</h1>\n<p>The servers in your BDC cluster have two separate installations of Python: &ldquo;system&rdquo; and &ldquo;user&rdquo;</p>\n<ul>\n  <li>System Python: This is version 2.6.6. This is the version that is shipped and standard with the version of Oracle Linux currently used in BDC. This version is left unchanged to not disrupt other operating system processes and procedures which depend on it.</li>\n  <li>User Python : This is version 2.7.x. BDC configures this version for PySpark and Zeppelin. It is located at /u01/bdcsce/usr/local/bin/python</li>\n</ul>\n<p>It should be noted that the default PATH for shell sessions will pickup the system python installation, but the BDC tools (like Zeppelin and pySpark) are configured for the user python installation.</p>\n<p>You should be using the User Python. See below for examples on how to add packages to the User python installation.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702818_1771726697","id":"20180301-155638_1186862773","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:432"},{"title":"Illustration of the 2 Python installations","text":"%sh\nsleep 2 # use a sleep so that output does not get garbled by zeppelin issue\necho \"System python versions.\"\npython -V\npip -V\n\nsleep 8\n# use a sleep so that output does not appear out of order\necho \"..\"\necho \"..\"\n\necho \"User python versions.\"\n/u01/bdcsce/usr/local/bin/python -V\n/u01/bdcsce/usr/local/bin/pip -V","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"System python versions.\nPython 2.6.6\npip 9.0.1 from /usr/lib/python2.6/site-packages (python 2.6)\n..\n..\nUser python versions.\nPython 2.7.14\npip 9.0.1 from /u01/bdcsce/usr/local/lib/python2.7/site-packages (python 2.7)\n"}]},"apps":[],"jobName":"paragraph_1525975702819_1771341948","id":"20180301-155934_1713208046","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:433"},{"title":"Illustration that Zeppelin and Pyspark are configured for the user Python installation (2.7)","text":"%pyspark\nimport sys\nprint (sys.version)","dateUpdated":"2018-05-10T18:08:22+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2.7.14 (default, Oct  6 2017, 22:49:22) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-18)]\n"}]},"apps":[],"jobName":"paragraph_1525975702819_1771341948","id":"20180201-154020_1076413551","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:434"},{"title":"How to install additional packages for the User python installation","text":"%sh\n# This will put packages into /u01/bdcsce/usr/local/lib/python2.7/site-packages/\n\nsudo /u01/bdcsce/usr/local/bin/pip install numpy\n","dateUpdated":"2018-05-10T19:05:13+0000","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702819_1771341948","id":"20180301-163245_1843405770","dateCreated":"2018-05-10T18:08:22+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:435","user":"anonymous","dateFinished":"2018-05-10T19:05:18+0000","dateStarted":"2018-05-10T19:05:11+0000"},{"title":"Example to show that your package was installed","text":"%pyspark\nimport numpy\na1 = numpy.array([1,2,3,4,5])\na1sum = a1.sum()\nprint(a1sum)","dateUpdated":"2018-05-10T18:08:22+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702820_1769418204","id":"20180301-155145_960670457","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:436"},{"title":"Example to show that your package works with spark","text":"%pyspark\n#simple example from https://gist.github.com/koverholt/a2cc2a0ab51acb13ae57\nimport numpy as np\n \ndef mult(x):\n    y = np.array([2])\n    return x*y\n \nx = np.arange(200)\ndistData = sc.parallelize(x)\n \nresults = distData.map(mult).collect()\n \nprint results","dateUpdated":"2018-05-10T18:08:22+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702820_1769418204","id":"20180301-165303_440510856","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:437"},{"text":"%sh\n# This will put packages into /u01/bdcsce/usr/local/lib/python2.7/site-packages/\n# may take 10 minutes\nsudo /u01/bdcsce/usr/local/bin/pip install pandas scipy scikit-learn\n\n","user":"anonymous","dateUpdated":"2018-05-10T19:07:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":"false"},"editorMode":"ace/mode/sh","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525979036321_120133177","id":"20180510-190356_55070331","dateCreated":"2018-05-10T19:03:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1485","dateFinished":"2018-05-10T19:12:10+0000","dateStarted":"2018-05-10T19:05:39+0000","errorMessage":"","title":"Load some other Python packages (optional- will take 10 minutes)"},{"text":"%md\n# Connecting to Oracle Database From Python\n\nThere are two good methods to connect to Oracle Databases from Python.\n\n+ Use Spark APIs to read/write JDBC from PySpark.  See the Extras notebooks \"Working with Oracle Database\" for some Spark JDBC examples\n+ Use the cx_Oracle module\n\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Connecting to Oracle Database From Python</h1>\n<p>There are two good methods to connect to Oracle Databases from Python.</p>\n<ul>\n  <li>Use Spark APIs to read/write JDBC from PySpark. See the Extras notebooks &ldquo;Working with Oracle Database&rdquo; for some Spark JDBC examples</li>\n  <li>Use the cx_Oracle module</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702821_1769033455","id":"20180301-202232_1973884685","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:438"},{"text":"%md\n# Mandatory Pre-Requisite Steps:  Run the Extras/Working with Oracle Database notebook\n\n\nBe sure to complete the steps in the Extras/Working with Oracle Database notebook before continuing.\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Mandatory Pre-Requisite Steps: Run the Extras/Working with Oracle Database notebook</h1>\n<p>Be sure to complete the steps in the Extras/Working with Oracle Database notebook before continuing.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702821_1769033455","id":"20180501-133636_1539698875","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:439"},{"text":"%md\n# Using PySpark APIs to read/write JDBC to OracleDB\n\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Using PySpark APIs to read/write JDBC to OracleDB</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702821_1769033455","id":"20180501-133558_101275169","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:440"},{"text":"%pyspark\n\n# BE SURE TO UPDATE THE CONNECT STRING BELOW (the second part of the string)\nurl = \"jdbc:oracle:thin:@//\" + \"hostname:1521/PDB1.yourvalues.oraclecloud.internal\"\n\n# BE SURE TO UPDATE THE USER AND PASSWORD\nproperties = {\n    \"user\": \"youruser\",\n    \"password\": \"yourpassword\"\n}\n\njdbcDF = spark.read.jdbc(url=url, table=\"user_tables\", properties=properties)\n    \njdbcDF.printSchema()\n\njdbcDF2 = spark.read.jdbc(url=url, table=\"(select sysdate from dual)\", properties=properties)\n    \njdbcDF2.show()\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702822_1770187702","id":"20180501-134142_1965646277","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:441"},{"text":"%md\n# Using the cx_Oracle module\n\nFor more information, see https://oracle.github.io/python-cx_Oracle/\n\nThere are some examples here: http://www.oracle.com/technetwork/articles/dsl/python-091105.html\n\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Using the cx_Oracle module</h1>\n<p>For more information, see <a href=\"https://oracle.github.io/python-cx_Oracle/\">https://oracle.github.io/python-cx_Oracle/</a></p>\n<p>There are some examples here: <a href=\"http://www.oracle.com/technetwork/articles/dsl/python-091105.html\">http://www.oracle.com/technetwork/articles/dsl/python-091105.html</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702822_1770187702","id":"20180501-122639_180745621","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:442"},{"title":"Installing cx_Oracle","text":"%sh\n# This will put packages into /u01/bdcsce/usr/local/lib/python2.7/site-packages/\n\nsudo /u01/bdcsce/usr/local/bin/pip install cx_Oracle\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702822_1770187702","id":"20180501-122709_456203956","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:443"},{"text":"%md\n# Configure the Zeppelin, YARN, and Spark environments to work with cx_Oracle \n\nTechnically, we are configuring Zeppelin, YARN, and Spark to work with the Oracle Database Instant Client. \n\nFirst, connect to Ambari (see the Extra tutorial on Connecting to Ambari if you need help).  Then while in Ambari, do the following:\n\n## Setup the YARN environment\n\n- In Ambari, click on YARN.\n- Then click on Configs\n- Then click on Advanced\n- Then expand Advanced yarn-env\n- Then add these 2 lines to the top of the yarn-env template:\n\n    export TNS_ADMIN=/opt/oracle/dbconnector/tns_admin\n    export LD_LIBRARY_PATH=/opt/oracle/dbconnector/instantclient:$LD_LIBRARY_PATH\n\n- Then click Save\n- Name the changes \"oracle instant client\" and click Save again\n- If you get a warning message, click Proceed Anyways\n- NOTE: you do not need to restart now\n\n## Setup the SPARK environment\n\n- In Ambari, click on Spark2\n- Click on Configs\n- Expand Advanced spark2-defaults\n- Edit the spark.driver.extraLibraryPath field and append this value:\n:/opt/oracle/dbconnector/instantclient/\n- Then click Save\n- Name the changes \"oracle instant client\" and click Save again\n\n\n## Setup the Zeppelin environment\n\n- In Ambari, click on Zeppelin Notebook\n- Click on Configs\n- Expand Advanced zeppelin-env\n- Then add these 2 lines to the top of the zeppelin_env_content:\n\n    export TNS_ADMIN=/opt/oracle/dbconnector/tns_admin\n    export LD_LIBRARY_PATH=/opt/oracle/dbconnector/instantclient:$LD_LIBRARY_PATH\n\n- Then click Save\n- Name the changes \"oracle instant client\" and click Save again\n\n## Restart services\n\n- In Ambari, click on the Actions button underneath the list of services\n- Choose Restart All Required\n- Then click on Confirm Restart All\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Configure the Zeppelin, YARN, and Spark environments to work with cx_Oracle</h1>\n<p>Technically, we are configuring Zeppelin, YARN, and Spark to work with the Oracle Database Instant Client. </p>\n<p>First, connect to Ambari (see the Extra tutorial on Connecting to Ambari if you need help). Then while in Ambari, do the following:</p>\n<h2>Setup the YARN environment</h2>\n<ul>\n  <li>In Ambari, click on YARN.</li>\n  <li>Then click on Configs</li>\n  <li>Then click on Advanced</li>\n  <li>Then expand Advanced yarn-env</li>\n  <li>Then add these 2 lines to the top of the yarn-env template:\n    <p>export TNS_ADMIN=/opt/oracle/dbconnector/tns_admin<br/>export LD_LIBRARY_PATH=/opt/oracle/dbconnector/instantclient:$LD_LIBRARY_PATH</p>\n  </li>\n  <li>\n  <p>Then click Save</p></li>\n  <li>Name the changes &ldquo;oracle instant client&rdquo; and click Save again</li>\n  <li>If you get a warning message, click Proceed Anyways</li>\n  <li>NOTE: you do not need to restart now</li>\n</ul>\n<h2>Setup the SPARK environment</h2>\n<ul>\n  <li>In Ambari, click on Spark2</li>\n  <li>Click on Configs</li>\n  <li>Expand Advanced spark2-defaults</li>\n  <li>Edit the spark.driver.extraLibraryPath field and append this value:<br/>:/opt/oracle/dbconnector/instantclient/</li>\n  <li>Then click Save</li>\n  <li>Name the changes &ldquo;oracle instant client&rdquo; and click Save again</li>\n</ul>\n<h2>Setup the Zeppelin environment</h2>\n<ul>\n  <li>In Ambari, click on Zeppelin Notebook</li>\n  <li>Click on Configs</li>\n  <li>Expand Advanced zeppelin-env</li>\n  <li>Then add these 2 lines to the top of the zeppelin_env_content:\n    <p>export TNS_ADMIN=/opt/oracle/dbconnector/tns_admin<br/>export LD_LIBRARY_PATH=/opt/oracle/dbconnector/instantclient:$LD_LIBRARY_PATH</p>\n  </li>\n  <li>\n  <p>Then click Save</p></li>\n  <li>Name the changes &ldquo;oracle instant client&rdquo; and click Save again</li>\n</ul>\n<h2>Restart services</h2>\n<ul>\n  <li>In Ambari, click on the Actions button underneath the list of services</li>\n  <li>Choose Restart All Required</li>\n  <li>Then click on Confirm Restart All</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1525975702823_1769802953","id":"20180501-131940_1364758693","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:444"},{"title":"Testing cx_Oracle","text":"%sh\n\n# BE SURE TO CHANGE THE youruser, yourpassword, and connect string below\n\n\n#export TNS_ADMIN=/opt/oracle/dbconnector/tns_admin\n#export LD_LIBRARY_PATH=/opt/oracle/dbconnector/instantclient:$LD_LIBRARY_PATH\n#export PATH=/opt/oracle/dbconnector/instantclient:$PATH\n\n\ncat << EOF > cx_oracle_test.py\n#!/usr/bin/env python\n\nfrom __future__ import print_function\n\nimport cx_Oracle\n\n# Connect to Database\nconnection = cx_Oracle.connect(\"youruser\", \"yourpassword\", \"hostname:1521/PDB1.yourvalues.oraclecloud.internal\")\n\ncursor = connection.cursor()\ncursor.execute(\"\"\"\n    SELECT table_name, tablespace_name\n    FROM user_tables\n    WHERE rownum < :rownum_val\"\"\",\n    rownum_val = 10)\nfor tname, tsname in cursor:\n    print(\"Values:\", tname, tsname)\nEOF\n\nls -l cx_oracle_test.py\necho \"..\"\n\n/u01/bdcsce/usr/local/bin/python cx_oracle_test.py\necho \"done\"\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702823_1769802953","id":"20180501-122808_1507050191","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:445"},{"title":"Testing cx_Oracle from Pyspark","text":"%pyspark\n\n# BE SURE TO CHANGE THE youruser, yourpassword, and connect string below\n\nfrom __future__ import print_function\n\nimport cx_Oracle\n\n# Connect to Database\nconnection = cx_Oracle.connect(\"youruser\", \"yourpassword\", \"hostname:1521/PDB1.yourvalues.oraclecloud.internal\")\n\ncursor = connection.cursor()\ncursor.execute(\"\"\"\n    SELECT table_name, tablespace_name\n    FROM user_tables\n    WHERE rownum < :rownum_val\"\"\",\n    rownum_val = 10)\nfor tname, tsname in cursor:\n    print(\"Values:\", tname, tsname)","dateUpdated":"2018-05-10T18:08:22+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702823_1769802953","id":"20180501-133430_372613647","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:446"},{"text":"%sh\n","dateUpdated":"2018-05-10T18:08:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":"false"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525975702824_1767879208","id":"20180501-125104_256781658","dateCreated":"2018-05-10T18:08:22+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:447"}],"name":"Extras/Understanding Python with BDC","id":"2DFY5BZP4","angularObjects":{"2DF2ZCZWG:shared_process":[],"2DDKEV2YH:shared_process":[],"2DEJTENB1:shared_process":[],"2DFFEBEEY:shared_process":[],"2DCYCMYY9:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2DE4GPD3G:shared_process":[],"2DEB4Z9Y2:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}