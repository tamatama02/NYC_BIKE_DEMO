{
  "paragraphs": [
    {
      "text": "%md\n## Welcome to Demo with Object Store\n##### This is a live tutorial, you can run the code yourself. (Shift-Enter to Run)\n\n### Things to do before you run\n* Take your network settings into account before you run.  If your bdcsce_default_objectstore_url /etc/bdcsce/conf/datasources.properties indicates you are using swift:// then continue as described below.  Instead if you are configured to use oci:// then you will create a directory under that URL and replace \"swift://bank.default/bank.csv\" with your oci:// path to bank.csv.\n* Fillup Object store credentials below\n* Create a container by name \"bank\" and upload the exploaded `bank.csv` to that Object store location. `bank.csv` should be a part of [link](http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip)",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464118638478_-2071025015",
      "id": "20160524-153718_1397925708",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eWelcome to Demo with Object Store\u003c/h2\u003e\n\u003ch5\u003eThis is a live tutorial, you can run the code yourself. (Shift-Enter to Run)\u003c/h5\u003e\n\u003ch3\u003eThings to do before you run\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eFillup Object store credentials below\u003c/li\u003e\n\u003cli\u003eCreate a container by name \u0026ldquo;bank\u0026rdquo; and upload the exploaded \u003ccode\u003ebank.csv\u003c/code\u003e to that container. \u003ccode\u003ebank.csv\u003c/code\u003e should be a part of \u003ca href\u003d\"http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip\"\u003elink\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "May 24, 2016 3:37:18 PM",
      "dateStarted": "Feb 24, 2017 7:28:27 AM",
      "dateFinished": "Feb 24, 2017 7:28:27 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load data from Object Store into a table",
      "text": "// TODO:\n// a) Fillup Object store credentials below\n// b) Create a container by name \"bank\" and upload the exploaded bank.csv to that container.\n//   bank.csv should be a part of http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip\n\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\n\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// So you don\u0027t need create them manually\n\n// TODO: Fill up where the \nval bankText \u003d sc.textFile(\"swift://bank.default/bank.csv\")\nbankText.count()\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank \u003d bankText.map(s \u003d\u003e s.split(\";\")).filter(s \u003d\u003e s(0) !\u003d \"\\\"age\\\"\").map(\n    s \u003d\u003e Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt )).toDF();\nbank.registerTempTable(\"bank\")",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464118674175_1223087798",
      "id": "20160524-153754_758660435",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nbankText: org.apache.spark.rdd.RDD[String] \u003d swift://bank.default/bank.csv MapPartitionsRDD[56] at textFile at \u003cconsole\u003e:45\nres16: Long \u003d 4522\ndefined class Bank\nbank: org.apache.spark.sql.DataFrame \u003d [age: int, job: string, marital: string, education: string, balance: int]\n"
      },
      "dateCreated": "May 24, 2016 3:37:54 PM",
      "dateStarted": "Feb 24, 2017 7:28:27 AM",
      "dateFinished": "Feb 24, 2017 7:28:29 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Distribution of customers under 30",
      "text": "%sql \nselect age, count(1) value\nfrom bank \nwhere age \u003c 30 \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 304.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464118691547_-1165802799",
      "id": "20160524-153811_410676708",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n"
      },
      "dateCreated": "May 24, 2016 3:38:11 PM",
      "dateStarted": "Feb 24, 2017 7:28:27 AM",
      "dateFinished": "Feb 24, 2017 7:28:30 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere age \u003c ${maxAge\u003d30} \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {
          "maxAge": "55"
        },
        "forms": {
          "maxAge": {
            "name": "maxAge",
            "defaultValue": "30",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464118787326_-38934567",
      "id": "20160524-153947_411480657",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n30\t150\n31\t199\n32\t224\n33\t186\n34\t231\n35\t180\n36\t188\n37\t161\n38\t159\n39\t130\n40\t142\n41\t135\n42\t141\n43\t115\n44\t105\n45\t112\n46\t119\n47\t108\n48\t114\n49\t112\n50\t101\n51\t91\n52\t86\n53\t94\n54\t71\n"
      },
      "dateCreated": "May 24, 2016 3:39:47 PM",
      "dateStarted": "Feb 24, 2017 7:28:29 AM",
      "dateFinished": "Feb 24, 2017 7:28:31 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere marital\u003d\"${marital\u003dsingle,single|divorced|married}\" \ngroup by age \norder by age",
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {
          "marital": "single"
        },
        "forms": {
          "marital": {
            "name": "marital",
            "defaultValue": "single",
            "options": [
              {
                "value": "single"
              },
              {
                "value": "divorced"
              },
              {
                "value": "married"
              }
            ],
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464118860719_1007071810",
      "id": "20160524-154100_971729355",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t17\n24\t13\n25\t33\n26\t56\n27\t64\n28\t78\n29\t56\n30\t92\n31\t86\n32\t105\n33\t61\n34\t75\n35\t46\n36\t50\n37\t43\n38\t44\n39\t30\n40\t25\n41\t19\n42\t23\n43\t21\n44\t20\n45\t15\n46\t14\n47\t12\n48\t12\n49\t11\n50\t8\n51\t6\n52\t9\n53\t4\n55\t3\n56\t3\n57\t2\n58\t7\n59\t2\n60\t5\n66\t2\n69\t1\n"
      },
      "dateCreated": "May 24, 2016 3:41:00 PM",
      "dateStarted": "Feb 24, 2017 7:28:31 AM",
      "dateFinished": "Feb 24, 2017 7:28:33 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "authenticationInfo": {},
      "dateUpdated": "Feb 24, 2017 7:28:27 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464119018685_705891687",
      "id": "20160524-154338_1870108866",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "May 24, 2016 3:43:38 PM",
      "dateStarted": "Feb 24, 2017 7:28:32 AM",
      "dateFinished": "Feb 24, 2017 7:28:33 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Demo Object Store",
  "id": "2BN6V6P3K",
  "angularObjects": {
    "2C919KR6F": [],
    "2C97ZBP5U": [],
    "2CA4Q4KPJ": [],
    "2C962G1XX": [],
    "2C8QSQZ4R": [],
    "2CBZ4GHQX": [],
    "2CBKZTYKJ": [],
    "2C9QJ33Y6": [],
    "2CAACCR11": []
  },
  "config": {},
  "info": {}
}
